#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-path>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables

### Configure directoires

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

### Output format

info() {
    echo "       $*" || true
}

header() {
    echo "" || true
    echo "-----> $*" || true
}

error() {
    echo " !     $*" >&2 || true
    echo "" || true
}

export_env_dir() {
    env_dir=$1
    whitelist_regex=${2:-''}
    blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
    if [ -d "$env_dir" ]; then
        for e in $(ls $env_dir); do
            echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
                export "$e=$(cat $env_dir/$e)"
            :
        done
    fi
}

export_env_dir $ENV_DIR 'MAXMIND_LICENSE_KEY'

header "Checking MaxMind License"
: "${MAXMIND_LICENSE_KEY:?env MAXMIND_LICENSE_KEY is missing}"
info "MAXMIND_LICENSE_KEY: ********"

calc_md5() {
    md5sum "$1"|cut -d' ' -f1 # linux
    # md5 "$1"|cut -d' ' -f4    # mac
}

header "Downloding latest MaxMind DBs"
mkdir -p $CACHE_DIR
mkdir -p $BUILD_DIR/data
cd $CACHE_DIR
for db_name in GeoIP2-City GeoIP2-ISP GeoIP2-Connection-Type; do
    tarball=$CACHE_DIR/$db_name.tar.gz
    download_required=true

    if [ -f $CACHE_DIR/$db_name.tar.gz ]; then
        md5_url="https://download.maxmind.com/app/geoip_download?edition_id=\
${db_name}&suffix=tar.gz.md5&license_key=${MAXMIND_LICENSE_KEY}"
        if [ "$(curl -s $md5_url)" == "$(calc_md5 $tarball)" ]; then
            info "$db_name: Already latest, skip download"
            download_required=false
        fi
    fi

    if [ $download_required = true ]; then
        url="https://download.maxmind.com/app/geoip_download?edition_id=\
${db_name}&suffix=tar.gz&license_key=${MAXMIND_LICENSE_KEY}"
        curl -s -o $tarball $url
        info "$db_name: Downloaded"
    fi

    tar -xzOf $tarball --wildcards */$db_name.mmdb > $BUILD_DIR/data/$db_name.mmdb
    info "$db_name: Extracted"
done

header "Build succeeded!"
